# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FBOutput

import tdw.flatbuffers

class StaticArticulationBody(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsStaticArticulationBody(cls, buf, offset):
        n = tdw.flatbuffers.encode.Get(tdw.flatbuffers.packer.uoffset, buf, offset)
        x = StaticArticulationBody()
        x.Init(buf, n + offset)
        return x

    # StaticArticulationBody
    def Init(self, buf, pos):
        self._tab = tdw.flatbuffers.table.Table(buf, pos)

    # StaticArticulationBody
    def Id(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StaticArticulationBody
    def SegmentationColor(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .Color import Color
            obj = Color()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StaticArticulationBody
    def Mass(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # StaticArticulationBody
    def Immovable(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(tdw.flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # StaticArticulationBody
    def Root(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(tdw.flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # StaticArticulationBody
    def ParentId(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StaticArticulationBody
    def Name(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def StaticArticulationBodyStart(builder): builder.StartObject(7)
def StaticArticulationBodyAddId(builder, id): builder.PrependInt32Slot(0, id, 0)
def StaticArticulationBodyAddSegmentationColor(builder, segmentationColor): builder.PrependStructSlot(1, tdw.flatbuffers.number_types.UOffsetTFlags.py_type(segmentationColor), 0)
def StaticArticulationBodyAddMass(builder, mass): builder.PrependFloat32Slot(2, mass, 0.0)
def StaticArticulationBodyAddImmovable(builder, immovable): builder.PrependBoolSlot(3, immovable, 0)
def StaticArticulationBodyAddRoot(builder, root): builder.PrependBoolSlot(4, root, 0)
def StaticArticulationBodyAddParentId(builder, parentId): builder.PrependInt32Slot(5, parentId, 0)
def StaticArticulationBodyAddName(builder, name): builder.PrependUOffsetTRelativeSlot(6, tdw.flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def StaticArticulationBodyEnd(builder): return builder.EndObject()
